{
  "author": {
    "name": "Brandon Paton",
    "email": "bp@brandonpaton.com"
  },
  "name": "google-translate",
  "description": "Google Translate API for Node.js",
  "version": "0.1.2",
  "homepage": "https://github.com/paton/node-google-translate",
  "repository": {
    "type": "git",
    "url": "git://github.com/paton/node-google-translate"
  },
  "contributors": [
    {
      "name": "Brandon Paton",
      "email": "bp@brandonpaton.com"
    }
  ],
  "keywords": [
    "translate",
    "google translate",
    "translations"
  ],
  "main": "lib/main.js",
  "dependencies": {
    "async": "~0.2.6",
    "he": "~0.4.1",
    "request": "~2.27.0",
    "underscore": "~1.5.1"
  },
  "devDependencies": {},
  "license": "MIT",
  "engines": {
    "node": ">=0.6"
  },
  "readme": "Google Translate API for Node\n=====================\n\nA Node.js module for working with the [Google Translate API](https://developers.google.com/translate/v2/using_rest). \n\nAutomatically handles bulk translations that exceed the Google Translation API query limit.\n\nInstallation\n----------\n\nInstall via [npm](http://npmjs.org/)\n\n    npm install google-translate --save\n\n\nUsage overview\n----------\n\nRequire module and pass in your API key ([get one here](https://developers.google.com/translate/v2/pricing)).\n  \n    var googleTranslate = require('google-translate')(apiKey);\n    \nString translation:\n\n    googleTranslate.translate('My name is Brandon', 'es', function(err, translation) {\n      console.log(translation.translatedText);\n      // =>  Mi nombre es Brandon\n    });\n\nLanguage detection:\n\n    googleTranslate.detectLanguage('Gracias', function(err, detection) {\n      console.log(detection.language);\n      // =>  es\n    });\n\n# API\n\n**Callbacks**: All methods take a callback as their last parameter. Upon method completion, callbacks are passed an error if exists (otherwise null), followed by a response object or array: `callback(err, data)`.\n\n**Bulk translations**:  Passing an array of strings greater than 2k characters will be result in multiple concurrent asynchronous calls. Once all calls are completed, the response will be parsed, merged, and  passed to the callback. The default maximum concurrent requests is 10. You can override this value by passing in a new limit when you pass in your API key: `require('google-translate')(apiKey, concurrentLimit)`\n\n### Translate\n\nTranslate one or more strings.\n\n    googleTranslate.translate(strings, source, target, callback)\n    \n* **strings**: Required. Can be a string or an array of strings\n* **source**: Optional. Google will autodetect the source locale if not specified. [Available languages](https://developers.google.com/translate/v2/using_rest#target)\n* **target**:  Required. Language to translate to. [Available languages](https://developers.google.com/translate/v2/using_rest#target)\n* **callback**:  Required.\n\n*Example*: Translate a string to German (de) and autodetect source language\n\n    googleTranslate.translate('Hello', 'de', function(err, translation) {\n      console.log(translation);\n      // =>  { translatedText: 'Hallo', originalText: 'Hello', detectedSourceLanguage: 'en' }\n    });\n\n*Example*: Translate an array of English (en) strings to German (de)\n\n    googleTranslate.translate(['Hello', 'Thank you'], 'en', 'de', function(err, translations) {\n      console.log(translations);\n      // =>  [{ translatedText: 'Hallo', originalText: 'Hello' }, ...]\n    });\n  \n### Detect language\n\nDetect language of string or each string in an array.\n\n    googleTranslate.detectLanguage(strings, callback)\n    \n* **strings**: Required. Can be a string or an array of strings\n* **callback**:  Required.\n \n*Example*: Detect language from a string\n\n    googleTranslate.detectLanguage('Hello', function(err, detection){\n      console.log(detection);\n      // =>  { language: \"en\", isReliable: false, confidence: 0.5714286, originalText: \"Hello\" }\n    });\n\n*Example*: Detect language from an array of strings\n\n    googleTranslate.detectLanguage(['Hello', 'Danke'], function(err, detections) {\n      console.log(detections);\n      // =>  [{ language: \"en\", isReliable: false, confidence: 0.5714286, originalText: \"Hello\" }, ...]\n    });\n\n\n### Get supported languages\n\nRetrieve all languages supported by the Google Translate API.\n\n\n    googleTranslate.getSupportedLanguages(target, callback)\n    \n* **target**: Optional. If specified, response will include the name of the language translated to the specified target language\n* **callback**:  Required.\n\n*Example*: Get all supported language codes\n\n    googleTranslate.getSupportedLanguages(function(err, languageCodes) {\n      console.log(languageCodes);\n      // => ['af', 'ar', 'be', 'bg', 'ca', 'cs', ...]\n    });\n    \n*Example*: Get all supported language codes with language names in German\n\n    googleTranslate.getSupportedLanguages('de', function(err, languageCodes) {\n      console.log(languageCodes);\n      // => [{ language: \"en\", name: \"Englisch\" }, ...]\n    });\n\n  \n# Contribute\n\nForks and pull requests welcome!\n\n# TODO\n* Make POST instead of GET requests when query is greater than 2k. Limit for POST is 5k\n* Add tests\n* Design a better way of defining API keys to allow use of multiple Google Translate API keys\n\n# Author\n\nBrandon Paton. Email me if you have any questions: [bp@brandonpaton.com](mailto:bp@brandonpaton.com).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/paton/node-google-translate/issues"
  },
  "_id": "google-translate@0.1.2",
  "dist": {
    "shasum": "764b628a1364e26639bd178106a652fc9dd43b49"
  },
  "_from": "google-translate@",
  "_resolved": "https://registry.npmjs.org/google-translate/-/google-translate-0.1.2.tgz"
}
